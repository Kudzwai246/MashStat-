name: Weekly Chart Update

# Grant the Actions bot write access so it can commit JSON back
permissions:
  contents: write
  id-token: write

on:
  workflow_dispatch: {}          # manual trigger
  schedule:
    - cron: '15 0 * * 3'         # every Wednesday at 00:15 UTC

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout full history on main, with credentials so we can push
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0
          ref: main

      # 2) Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3) Install dependencies
      - name: Install dependencies
        run: npm install spotify-web-api-node firebase-admin googleapis

      # 4) Build the JSON files
      - name: Build charts JSON
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          SPOTIFY_CLIENT_ID:     ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          YOUTUBE_API_KEY:       ${{ secrets.YOUTUBE_API_KEY }}
        run: node scripts/buildCharts.js

      # 5) Commit & push if changed
      - name: Commit & push if changed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          git add public/mash100.json public/masha50.json
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Weekly charts update"
            git push origin main
          fi

      # 6) Deploy to Firebase Hosting
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken:              ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          channelId:              live
